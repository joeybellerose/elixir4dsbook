# DataViz Project

```elixir
Mix.install([
  {:vega_lite, "~> 0.1.6"},
  {:explorer, "~> 0.2.0"},
  {:kino, "~> 0.6.2"},
  {:kino_vega_lite, "~> 0.1.3"}
])
```

## Setup

```elixir
alias Explorer.{DataFrame, Series}
alias VegaLite, as: Vl
```

## Read In Data

```elixir
data_file = "~/Documents/r4ds/data/titanic/train.csv"

df = DataFrame.from_csv!(data_file)
```

## Preliminary Questions

How many rows and columns are in the Titanic Training dataset?

Which columns are Categororical (strings), Numbers (float or integer) and Dates?

```elixir
df
```

What does each column represent?

The Titanic data can be found here - https://www.kaggle.com/competitions/titanic/data

## Missing Data

<!-- livebook:{"attrs":{"chart_title":null,"height":null,"layers":[{"chart_type":"bar","color_field":null,"color_field_aggregate":null,"color_field_type":null,"data_variable":"df","x_field":"Embarked","x_field_aggregate":null,"x_field_type":"nominal","y_field":"__count__","y_field_aggregate":null,"y_field_type":null}],"vl_alias":"Elixir.Vl","width":null},"kind":"Elixir.KinoVegaLite.ChartCell","livebook_object":"smart_cell"} -->

```elixir
Vl.new()
|> Vl.data_from_values(df, only: ["Embarked"])
|> Vl.mark(:bar)
|> Vl.encode_field(:x, "Embarked", type: :nominal)
|> Vl.encode(:y, aggregate: :count)
```

```elixir
# |> Enum.filter(fn x -> x == "Pclass" or x == "Name" end)
col_names = df |> DataFrame.names()
```

Explorer will not let you unpivot columns with different data types

```elixir
df |> DataFrame.pivot_longer(col_names)
```

Trying to create a chart for each column to see where the `nil`s are seems like too much to display in livebook.

```elixir
# Vl.new()
# |> Vl.data_from_values(df)
# |> Vl.repeat(
#   [
#     row: col_names
#   ],
#   Vl.new()
#   # |> Vl.transform(filter: "datum['Embarked'] === null")
#   |> Vl.mark(:bar)
#   |> Vl.encode_repeat(:x, :row, type: :nominal)
#   |> Vl.encode(:y, aggregate: :count, type: :quantitative)
# )
```

## Kino Setup

```elixir
# Get all the number type columns
number_columns =
  df
  |> DataFrame.dtypes()
  |> Map.filter(fn {key, val} ->
    val == :float or (val == :integer and key != "PassengerId")
  end)
  |> Enum.map(fn {k, _v} ->
    k
  end)

number_options = Enum.zip(number_columns, number_columns)

category_columns =
  df
  |> DataFrame.dtypes()
  |> Map.filter(fn {_key, val} ->
    val == :string
  end)
  |> Enum.map(fn {k, _v} ->
    k
  end)

options = Enum.zip(category_columns, category_columns)
```

## Data Distribution

How is the numeric data distributed?

```elixir
num_select = Kino.Input.select("Options", number_options)
```

```elixir
Vl.new(height: 200)
|> Vl.data_from_values(df)
|> Vl.mark(:bar)
|> Vl.encode_field(:x, Kino.Input.read(num_select), type: :quantitative)
|> Vl.encode(:y, aggregate: :count)
```

How is the categorical data distributed?

```elixir
cat_select = Kino.Input.select("Options", options)
```

```elixir
Vl.new()
|> Vl.data_from_values(df)
|> Vl.mark(:bar)
|> Vl.encode_field(:x, Kino.Input.read(cat_select), type: :nominal)
|> Vl.encode(:y, aggregate: :count)
```

## Visualize Relationships

What relationships are there between the columns?

```elixir
color_input = Kino.Input.select("Options", options)
```

<!-- livebook:{"reevaluate_automatically":true} -->

```elixir
Vl.new()
|> Vl.data_from_values(df)
|> Vl.repeat(
  [
    # The list of columns and rows need to be reverses of each other
    row: number_columns,
    column: number_columns |> Enum.reverse()
  ],
  Vl.new()
  |> Vl.mark(:point)
  |> Vl.encode_repeat(:x, :column, type: :quantitative)
  |> Vl.encode_repeat(:y, :row, type: :quantitative)
  |> Vl.encode_field(:color, Kino.Input.read(color_input), type: :nominal)
)
```

How does sex relate to who survived?

```elixir
Vl.new()
|> Vl.data_from_values(df)
|> Vl.mark(:point)
|> Vl.encode_field(:x, )
```

How many `nil`s are there in total? For each column?
